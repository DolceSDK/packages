diff --git a/CMakeLists.txt b/CMakeLists.txt
index 256161a..e2f58cc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,37 +1,14 @@
 cmake_minimum_required(VERSION 2.8)
 
-if(NOT DEFINED CMAKE_TOOLCHAIN_FILE)
-  if(DEFINED ENV{VITASDK})
-    set(CMAKE_TOOLCHAIN_FILE "$ENV{VITASDK}/share/vita.toolchain.cmake" CACHE PATH "toolchain file")
-  else()
-    message(FATAL_ERROR "Please define VITASDK to point to your SDK path!")
-  endif()
-endif()
+set(CMAKE_TOOLCHAIN_FILE "$ENV{DOLCESDK}/share/dolce.toolchain.cmake" CACHE PATH "DolceSDK toolchain file")
+set(DOLCESDK_CMAKE_FILE "$ENV{DOLCESDK}/share/dolce.cmake" CACHE PATH "DolceSDK CMake functions file")
+include("${DOLCESDK_CMAKE_FILE}" REQUIRED)
 
 project(taipool)
-include("${VITASDK}/share/vita.cmake" REQUIRED)
 
-set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wl,-q -Wall -O3 -std=gnu99")
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fno-rtti -fno-exceptions")
-
-include_directories(
-)
-
-link_directories(
-  ${CMAKE_CURRENT_BINARY_DIR}
-)
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -O3 -std=gnu99")
 
 add_library(taipool taipool.c)
 
-target_link_libraries(taipool
-  SceLibKernel_stub
-  SceThreadmgrForDriver_stub
-)
-
-set_target_properties(taipool
-  PROPERTIES LINK_FLAGS "-nostdlib"
-  COMPILE_FLAGS "-D__VITA_KERNEL__"
-)
-
 install(FILES ${CMAKE_BINARY_DIR}/libtaipool.a DESTINATION lib)
 install(FILES ${CMAKE_SOURCE_DIR}/taipool.h DESTINATION include)
diff --git a/taipool.c b/taipool.c
index 9c07d0f..0f2befc 100644
--- a/taipool.c
+++ b/taipool.c
@@ -1,4 +1,5 @@
-#include <vitasdk.h>
+#include <string.h>
+#include <psp2/kernel/threadmgr.h>
 #include "taipool.h"
 
 #define POOL_PADDING 0x100 // Difference between stack pointer and mempool start in bytes
@@ -157,7 +158,7 @@ int taipool_init(size_t size){
 		SceKernelThreadInfo mempool_info;
 		mempool_info.size = sizeof(SceKernelThreadInfo);
 		if (!sceKernelGetThreadInfo(pool_id, &mempool_info)){
-			mempool_addr = mempool_info.stack + POOL_PADDING;
+			mempool_addr = mempool_info.pStack + POOL_PADDING;
 			mempool_id = pool_id;
 			mempool_size = mempool_info.stackSize - POOL_PADDING;
 		
@@ -242,4 +243,4 @@ void* taipool_realloc(void* ptr, size_t size){
 // Returns currently free space on mempool
 size_t taipool_get_free_space(void){
 	return mempool_free;
-}
\ No newline at end of file
+}
